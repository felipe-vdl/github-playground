name: Using Docker
on:
  push:
    branches: 6_docker
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules_${{hashFiles('**/package-lock.json')}}

      - name: Install dependencies
        if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Lint project
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules_${{hashFiles('**/package-lock.json')}}

      - name: Install dependencies
        if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Test project
        id: test
        run: npm test

      - name: Upload Test Report
        if: ${{ failure() && steps.test.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.json

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules_${{hashFiles('**/package-lock.json')}}

      - name: Install dependencies
        if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: project-build
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Upload build
        uses: actions/download-artifact@v3
        with:
          name: project-build
          path: dist

      - name: Deploy project
        run: |
          echo "Deploying..."
          ls
          ls dist